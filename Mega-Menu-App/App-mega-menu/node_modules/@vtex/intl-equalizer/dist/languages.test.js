"use strict";

var _languages = require("./languages");

var _constants = require("./constants");

jest.mock('fs');
describe('Languages', function () {
  it('should return error if doesnt have folder', function () {
    var result = (0, _languages.getAvailableLanguages)({});
    expect(result.error).toEqual(_constants.ERRORS.ERROR_NO_LOCALE_FOLDER);
  });
  it('should return error if doesnt have files', function () {
    require('fs').__setMockFolder('/react/locales/');

    var result = (0, _languages.getAvailableLanguages)({
      directory: '/react/locales/'
    });
    expect(result.error).toEqual(_constants.ERRORS.ERROR_NO_LOCALE_FILES);
  });
  it('should return languages if has files', function () {
    require('fs').__setMockFiles({
      '/react/locales/es.json': 'content',
      '/react/locales/en.js': 'content'
    });

    var expectedResult = ['es', 'en'];
    var result = (0, _languages.getAvailableLanguages)({
      directory: '/react/locales'
    });
    expect(result.generalLocales).toEqual(expectedResult);
  });
  it('should split language files into general and with region', function () {
    require('fs').__setMockFiles({
      '/react/locales/es.json': 'content',
      '/react/locales/en.js': 'content',
      '/react/locales/en-US.json': 'content'
    });

    var expectedResultGeneral = ['es', 'en'];
    var expectedResultRegion = ['en-US'];
    var result = (0, _languages.getAvailableLanguages)({
      directory: '/react/locales'
    });
    expect(expectedResultGeneral).toEqual(result.generalLocales);
    expect(expectedResultRegion).toEqual(result.regionLocales);
  });
  it('should ignore files listed on the filesToIgnore option', function () {
    require('fs').__setMockFiles({
      '/react/locales/es.json': 'content',
      '/react/locales/en.js': 'content',
      '/react/locales/en-US.json': 'content'
    });

    var expectedResultGeneral = ['es'];
    var expectedResultRegion = ['en-US'];
    var result = (0, _languages.getAvailableLanguages)({
      directory: '/react/locales',
      filesToIgnore: ['en.js']
    });
    expect(expectedResultGeneral).toEqual(result.generalLocales);
    expect(expectedResultRegion).toEqual(result.regionLocales);
  });
});